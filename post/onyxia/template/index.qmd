---
title: "`Onyxia`"
author: |
  [InseeFrLab](https://github.com/InseeFrLab)
#date: today
slide-number: true
footer: |
  **[onyxia.sh](https://www.onyxia.sh)**
# uncomment for French presentations:
#lang: fr
# for blind readers:
slide-tone: true
# for @olevitt:
chalkboard: # press the B key to toggle chalkboard
  theme: whiteboard
# uncomment to use the multiplex mode:
#multiplex: true
format:
  # pick the light mode (onyxia-revealjs) or the dark mode (onyxia-dark-revealjs)
  onyxia-revealjs:
  #onyxia-dark-revealjs:
    output-file: index.html
# visual editor configuration:
editor:
  render-on-save: true
---

## Onyxia

![](../featured.png)

## Onyxia ne cherche pas à se rendre indispensable

- Permet de rendre progressivement les utilisateurs de la plateforme familiers avec les technologies sous-jacentes:
    + `Kubernetes`, `Helm`, `S3`... 
 
. . .

- Les actions sur l'interface sont traduites en commandes exécutées sur le cluster, sur S3, sur Vault...

##  Un explorateur de fichiers S3

- Onyxia permet de glisser ses jeux de données pour les uploader sur S3

. . .  

- Onyxia permet de naviguer dans un système de stockage cloud comme sur un _filesystem_ local

##  Intégration avec `HashiCorp Vault`

- Stocker les informations sensibles de type clés d'API dans Vault 

. . .

- Accessibles dans les services interactifs sous forme de variable.

## Personnalisez l'apparence d'Onyxia

- Nombreuses options de personalisation. 

<img src = "../multiple_instances.svg" alt="Onyxia, un ensemble d'instanciations possibles"/>

## Un environnement de formation

- Onyxia permet de générer des URL standardisés pour lancer un environnement prêt à l'emploi 

. . .

<a href="https://datalab.sspcloud.fr/launcher/ide/jupyter-python?autoLaunch=true&amp;onyxia.friendlyName=%C2%ABpython-datascience%C2%BB&amp;init.personalInit=%C2%ABhttps%3A%2F%2Fraw.githubusercontent.com%2Flinogaliana%2Fpython-datascientist%2Fmaster%2Fsspcloud%2Finit-jupyter.sh%C2%BB&amp;init.personalInitArgs=%C2%ABmanipulation%2002a_pandas_tutorial%C2%BB&amp;security.allowlist.enabled=false" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/SSPcloud-Tester%20via%20SSP--cloud-informational&amp;color=yellow?logo=Python" alt="Onyxia"></a>

## Technologiquement agnostique

- Vous n'investissez pas sur une stack technique en particulier sauf `kubernetes` et `S3`.

. . .

- Rendre accessible n'importe quelle technologie cloud native

. . .

- Limite la dette technique future quand de nouvelles technologies émergent.
