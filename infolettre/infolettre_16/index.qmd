---
title: Infolettre n¬∞16
description: |
  Infolettre __D√©cembre 2023__

# Date published
date: '2023-12-14'
number: 16

image: learning.png

authors:
  - Lino Galiana

tags:
  - infolettre

categories:
  - Infolettre

css: style.css
code-annotations: hover
---

![](learning.png){width=50% fig-align="center"}

:::{.callout-tip}

__*Vous d√©sirez int√©grer la liste de diffusion ? L'inscription se fait [ici](https://framaforms.org/integration-reseau-des-data-scientists-1676407156).*__

:::

No√´l approchant, avant de se jeter sur le sapin pour 
ouvrir ses cadeaux, de d√©vorer une 
b√ªche ou les autres mets d√©licieux qui nous attendent, 
il est int√©ressant de se retourner pour regarder 
la progression de l'audience du r√©seau.
Cette newsletter sera ainsi principalement
consacr√©e √† une r√©trospective du r√©seau, 
similaire √† celle de l'[ann√©e 2022](infolettre/infolettre_09/index.qmd).
Une partie plus classique de pr√©sentation des actualit√©s de
la _data science_ suivra. 
 

## R√©trospective du r√©seau

### Une audience en progression

{{< include _snippet_progress_participants.qmd >}}

A l'exception du mois d'ao√ªt (pause estivale oblige),
la progression de l'audience a √©t√© assez r√©guli√®re
gr√¢ce aux √©v√©nements et contenu publi√© sur le site
du `SSP Hub`. 

```{ojs}
//| echo: false
html`<div>Pendant l'ann√©e 2022, le r√©seau a ainsi connu <span class="underline-big">${events.length}</span> √©v√©nements et publications de contenu (${countEvents("infolettre")}, ${countEvents("blog")}, ${countEvents("event")}, ${countEvents("masterclass")})</div>`
```


```{ojs}
//| echo: false
html`<div>${lineplot}</div>`
html`<div>${warm_strip}</div>`
md`__Choisir les √©v√©nements du r√©seau √† afficher üëáÔ∏è__`
html`<div>${viewof events_chosen_figure1}</div>`
html`<div>${table_events}</div>`
```

{{< include _snippet_lineplot.qmd >}}


### Du contenu qui int√©resse au-del√† des statisticiens publics

Les deux derni√®res publications sur le site du r√©seau,
√† savoir
l'[Infolettre #15](./infolettre/infolettre_15/index.qmd)
sur le _fine tuning_ de r√©seaux de neurones
et
le [_post_ de blog](./blog/parquetRP/index.qmd) sur la publication du recensement de la population au format `Parquet`
ont connu un √©cho important hors des 
cercles des _data scientist_ du service statistique public.

```{ojs}
//| echo: false
html`<div>${barplot_ssp}</div>`
```

<details>

<summary>
Code pour g√©n√©rer la figure
</summary>

```{ojs}
barplot_ssp = Plot.plot({
  marginLeft: 60,
  marginRight: 100,
  x: {label: "Frequency"},
  y: {label: null},
  color: {
    domain: ["Hors du SSP", "Institutions dans Service Statistique Public (SSP)"],
    range: ["forestgreen", "#6886bb"]
    },
  marks: [
    Plot.barX(hors_ssp_data, {y: "SSP", fy: "date", x: "mail", inset: 0.5, fill: "SSP", sort: "mail", tip: true, channels: {share: (d)  => `${100*d.share.toFixed(2)}%`}}),
    Plot.axisY({textAnchor: "start", fill: "black", dx: 14}),
    Plot.ruleX([0])
  ]
})
```

</details>

# news

Mistral AI: mixtral, lev√©e de fond
openai : sam altman, q*
ia act
post parquet
onyxia viewer


## old

```{ojs}
serie_contacts
```

```{ojs}
events_data_figure1_b
```

```{ojs}
function leftJoinArrays(array1, array2, key, mean, deviation) {
  const randomNoise = d3.randomNormal(mean, deviation);

  // Sort arrays by date
  array1.sort((a, b) => new Date(a.date) - new Date(b.date));
  array2.sort((a, b) => new Date(a.date) - new Date(b.date));

  // Perform left join
  const result = array1.map((item1, index) => {
    const matchingItem = array2.find((item2) => item2[key] === item1[key]);
    const noise = matchingItem ? randomNoise() : 0;
    const noisedMail = matchingItem ? matchingItem.mail + noise : undefined;
    return { rowNumber: index + 1, ...item1, ...matchingItem, noisedMail };
  });

  return result;
}
```

```{ojs}
events_data_figure1_b = leftJoinArrays(events_data_figure1, serie_contacts_complete, "date", 0, 40)
```


## serie


```{ojs}
viewof date_part1 = Scrubber(
  dates_2023, {
  delay: 1,
  autoplay: false,
  unique: true,
  sort: true,
  format: date => date.toLocaleString("en", {month: "long", day: "numeric"})
})
```


```{ojs}
color_mapping_events = {
  return {
    infolettre: "#4d78a6",
    event: "#f28e2c",
    blog: "#e05658",
    masterclass: "#76b7b1"
    }
}
```



<br>


```{ojs}
links_website_ssphub = {
    const toto = {};

    events_data_figure1_b.forEach(item => {
    toto[item.event] = item.href;
    });

    return toto
}
links_website_ssphub
```




{{< include _snippet_progress_participants_objects.qmd >}}




```{ojs}
Plot = require('@observablehq/plot@0.6.12/dist/plot.umd.min.js')
```

```{ojs}
import {disposal} from "@mbostock/disposal"
import {Scrubber} from "@mbostock/scrubber"
```


{{< include _functions.qmd >}}


{{< include _data.qmd >}}